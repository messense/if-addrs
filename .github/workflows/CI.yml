on: [push, pull_request]

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Run check
        run: cargo check

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: ["1.71.0", stable]
    steps:
      - uses: actions/checkout@v4
      - uses: maxim-lobanov/setup-xcode@v1
        if: ${{ matrix.os == 'macos-latest' && matrix.rust == '1.71.0' }}
        with:
          xcode-version: latest-stable
      - uses: dtolnay/rust-toolchain@stable
        if: ${{ matrix.rust == 'stable' }}
      - uses: dtolnay/rust-toolchain@1.71.0
        if: ${{ matrix.rust == '1.71.0' }}
      - name: Build
        run: cargo build
      - name: Test
        run: cargo test -- --show-output

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run fmt
        run: cargo fmt --all -- --check

  clippy_check:
    name: Clippy Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: r7kamura/rust-problem-matchers@9fe7ca9f6550e5d6358e179d451cc25ea6b54f98 #v1.5.0
      - name: Run clippy
        run: cargo clippy --all-features
